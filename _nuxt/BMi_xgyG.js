import{B as _,r as v,o as w,c as T,z as r,e as s,w as d,h as t,d as l,f as m,t as i,M as c,F as h,H as k,O as B,I as U,G as b,aU as x}from"#entry";const C={class:"space-y-3"},G={key:0,class:"text-sm bg-blue-50 p-3 rounded"},E={key:1,class:"text-sm"},L={class:"flex flex-wrap gap-2 mt-1"},M=_({__name:"TheologicalGlossary",props:{id:{},term:{},definition:{},etymology:{},relatedTerms:{default:()=>[]}},emits:["close"],setup(p,{emit:u}){const n=v(!1),f=u;return w(()=>{const e=o=>{o.detail===p.id&&(n.value=!0)};window.addEventListener("open-glossary",e)}),T(()=>{window.removeEventListener("open-glossary",()=>{})}),(e,o)=>{const g=B,y=x;return s(),r(y,{open:b(n),"onUpdate:open":o[0]||(o[0]=a=>U(n)?n.value=a:null),close:{onClick:()=>f("close")},title:e.term,description:"Terme théologique",ui:{description:"hidden",content:"max-w-2xl"}},{body:d(()=>[t("div",C,[t("p",null,i(e.definition),1),e.etymology?(s(),l("div",G,[o[1]||(o[1]=t("strong",null,"Étymologie :",-1)),c(" "+i(e.etymology),1)])):m("",!0),e.relatedTerms.length?(s(),l("div",E,[o[2]||(o[2]=t("strong",null,"Termes liés :",-1)),t("div",L,[(s(!0),l(h,null,k(e.relatedTerms,a=>(s(),r(g,{key:a,variant:"soft"},{default:d(()=>[c(i(a),1)]),_:2},1024))),128))])])):m("",!0)])]),_:1},8,["open","close","title"])}}}),O=Object.assign(M,{__name:"TheologicalGlossary"});export{O as default};
