import{B as v,r as x,o as w,c as T,z as d,e as o,w as c,h as s,d as l,f as m,t as i,M as u,F as _,I as h,O as k,J as B,H as b,aZ as C}from"#entry";const U={class:"space-y-3"},E={key:0,class:"text-sm bg-blue-50 p-3 rounded"},G={key:1,class:"text-sm"},L={class:"flex flex-wrap gap-2 mt-1"},M=v({__name:"TheologicalGlossary",props:{id:{},term:{},definition:{},etymology:{},relatedTerms:{default:()=>[]}},emits:["close"],setup(t,{emit:f}){const n=x(!1),g=f;return w(()=>{const r=e=>{e.detail===t.id&&(n.value=!0)};window.addEventListener("open-glossary",r)}),T(()=>{window.removeEventListener("open-glossary",()=>{})}),(r,e)=>{const y=k,p=C;return o(),d(p,{open:b(n),"onUpdate:open":e[0]||(e[0]=a=>B(n)?n.value=a:null),close:{onClick:()=>g("close")},title:t.term,description:"Terme théologique",ui:{description:"hidden",content:"max-w-2xl"}},{body:c(()=>[s("div",U,[s("p",null,i(t.definition),1),t.etymology?(o(),l("div",E,[e[1]||(e[1]=s("strong",null,"Étymologie :",-1)),u(" "+i(t.etymology),1)])):m("",!0),t.relatedTerms.length?(o(),l("div",G,[e[2]||(e[2]=s("strong",null,"Termes liés :",-1)),s("div",L,[(o(!0),l(_,null,h(t.relatedTerms,a=>(o(),d(y,{key:a,variant:"soft"},{default:c(()=>[u(i(a),1)]),_:2},1024))),128))])])):m("",!0)])]),_:1},8,["open","close","title"])}}}),O=Object.assign(M,{__name:"TheologicalGlossary"});export{O as default};
